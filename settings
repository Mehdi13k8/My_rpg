event.c:	sfText_setColor(t->history, t->cf1);
event.c:	sfText_setString(t->history,
event.c:	if (t->i1 == 5) {
event.c:		t->cf1.a = t->alpha1 += 1.0;
event.c:		if (t->alpha1 > 255) {
event.c:			t->cf1.a = 255;
event.c:		if (t->s >= 750 || sfKeyboard_isKeyPressed(sfKeyReturn) == sfTrue) {
event.c:			t->phistory.x = 10000;
event.c:			t->i1 = 6;
event.c:			sfMusic_stop(t->mbackground);
event.c:		t->s++;
event.c:	if ((t->menu1 == 1 && sfKeyboard_isKeyPressed(sfKeyReturn) == sfTrue) ||
event.c:	    t->i1 == 1) {
event.c:		if (t->menu1 == 1)
event.c:			t->i1 = 1;
event.c:		t->pplay.x = 80000;t->pplay.y = 80000;
event.c:		t->pquit.x = 105000;t->pquit.y = 10000;
event.c:		t->cf.a = t->alpha -= 2.0;
event.c:		if (t->alpha < 0) {
event.c:			t->cf.a = 0.0;
event.c:			t->menu1 = 3;
event.c:			t->i1 = 5;
event.c:	if (t->menu1 == 2 && sfKeyboard_isKeyPressed(sfKeyReturn) == sfTrue)
event.c:		sfRenderWindow_close(t->window);
event.c:	sfText_setPosition(t->play, t->pplay);
event.c:	sfText_setPosition(t->settings, t->psettings);
event.c:	sfText_setPosition(t->quit, t->pquit);
event.c:	sfText_setPosition(t->history, t->phistory);
event.c:	sfSprite_setColor(t->sbackground, t->cf);
event.c:	if (t->i1 == 0) {
event.c:		t->cf.a = t->alpha += 0.5;
event.c:		if (t->alpha >= 255) {
event.c:			t->alpha = 255;
event.c:			if (t->menu1 == 3 && sfKeyboard_isKeyPressed(sfKeyReturn) == sfTrue) {
event.c:	if (t->i1 == 5)
event.c:	if (t->i1 == 6) {
event.c:		t->cmap.r = 255;t->cmap.g = 255; t->cmap.b = 255;t->cmap.a = 255;
event.c:		while (t->co < 20*2)
event.c:		sfSprite_setColor(t->sprite[t->co++], t->cmap);
event.c:	t->co = 0;
event.c:	t->t = 0;
event.c:	t->cmap.r = 255;t->cmap.g = 255; t->cmap.b = 255;t->cmap.a = 0;
event.c:	t->titleset = sfTexture_createFromFile("texture.png", NULL);
event.c:	while (t->t < 20*2) {
event.c:		t->sprite[t->t] = sfSprite_create();
event.c:		sfSprite_setTexture(t->sprite[t->t], t->titleset, sfTrue);
event.c:		if (t->map[0][t->t] == '1')
event.c:			sfSprite_setTextureRect(t->sprite[t->t], t->rmap[0]);
event.c:		//if (t->map[0][t->t] == '2')
event.c:		//sfSprite_setTextureRect(t->sprite[t->t], t->rmap[1]);
event.c:		sfSprite_setColor(t->sprite[t->t], t->cmap);
event.c:		sfSprite_setPosition(t->sprite[t->t], t->test[t->t]);
event.c:		t->t++;
game.c:	sfRenderWindow_clear(t->window, sfBlack);
game.c:	sfRenderWindow_drawSprite(t->window, t->sbackground, NULL);
game.c:	t->z = 0;
game.c:	while (t->z < 20*2)
game.c:		sfRenderWindow_drawSprite(t->window, t->sprite[t->z++], NULL);
game.c:	sfRenderWindow_drawSprite(t->window, t->splayer, NULL);
game.c:	sfRenderWindow_drawText(t->window, t->play, NULL);
game.c:	sfRenderWindow_drawText(t->window, t->settings, NULL);
game.c:	sfRenderWindow_drawText(t->window, t->quit, NULL);
game.c:	sfRenderWindow_drawText(t->window, t->history, NULL);
game.c:        sfRenderWindow_display(t->window);
game.c:	sfTexture_destroy(t->background);
game.c:	sfText_destroy(t->play);
game.c:	sfText_destroy(t->settings);
game.c:	sfText_destroy(t->quit);
game.c:	sfSprite_destroy(t->sbackground);
game.c:	sfMusic_destroy(t->mbackground);
game.c:	sfRenderWindow_destroy(t->window);
game.c:	while (sfRenderWindow_isOpen(t->window)) {
game.c:		while (sfRenderWindow_pollEvent(t->window, &t->event)) {
game.c:			if (t->event.type == sfEvtClosed)
game.c:				sfRenderWindow_close(t->window);
map.c:	t->i = 0;
map.c:	t->j = 0;
map.c:	t->z = 0;
map.c:		t->map[i][j] = c;
map.c:	while (t->z < 20*2)
map.c:		t->test[t->z++].x = 10000;
map.c:	t->z = 0;
map.c:	while (t->i < 11) {
map.c:		while (t->j <= 20) {
map.c:			if (t->map[t->i][t->j] == '1') {
map.c:				t->rmap[0].left = 0;t->rmap[0].top = 0;
map.c:				t->rmap[0].width = 96; t->rmap[0].height = 96;
map.c:				t->test[t->z].x = t->x;
map.c:				t->test[t->z].y = t->y;
map.c:				t->z++;
map.c:			/*if (t->map[t->i][t->j] == '2') {
map.c:				t->rmap[1].left = 96;t->rmap[1].top = 0;
map.c:				t->rmap[1].width = 96; t->rmap[1].height = 96;
map.c:				t->test[t->z].x = t->x;
map.c:				t->test[t->z].y = t->y;
map.c:				t->z++;
map.c:			t->x += 96;
map.c:			t->j++;
map.c:		t->x = 0;
map.c:		t->j = 0;
map.c:		t->y += 96;
map.c:		t->i++;
player.c:	t->player = texture_create("perso.png");
player.c:	t->splayer = sprite_create(t->player, sfFalse);
player.c:	t->rplayer.left = 95; t->rplayer.top = 0;
player.c:	t->rplayer.width = 57; t->rplayer.height = 87;
player.c:	t->pplayer.x = 100;
player.c:	t->pplayer.y = 0;
player.c:	t->clock = sfClock_create();
player.c:	sfSprite_setPosition(t->splayer, t->pplayer);
player.c:	sfSprite_setTextureRect(t->splayer, t->rplayer);
player.c:	t->time = sfClock_getElapsedTime(t->clock);
player.c:	t->seconds = t->time.microseconds / 1000000.0;
player.c:		t->pplayer.y+= 5;
player.c:		if (t->seconds > 0.0 && t->seconds < 0.25){
player.c:			t->rplayer.left = 0; t->rplayer.top = 0;
player.c:		if (t->seconds > 0.25  && t->seconds < 0.50){
player.c:			t->rplayer.left = 98*2; t->rplayer.top = 0;
player.c:		if (t->seconds > 0.50)
player.c:			sfClock_restart(t->clock);
player.c:		t->direction = 1;
player.c:	else if (t->direction == 1) {
player.c:		t->rplayer.left = 95; t->rplayer.top = 0;
player.c:		t->pplayer.y -= 5;
player.c:		if (t->seconds > 0.0 && t->seconds < 0.25){
player.c:			t->rplayer.left = 0; t->rplayer.top = 144*2;
player.c:		if (t->seconds > 0.25  && t->seconds < 0.50){
player.c:			t->rplayer.left = 98*2; t->rplayer.top = 144*2;
player.c:		if (t->seconds > 0.50)
player.c:			sfClock_restart(t->clock);
player.c:		t->direction = 2;
player.c:	else if (t->direction == 2) {
player.c:		t->rplayer.left = 95; t->rplayer.top = 144*2;
player.c:		t->pplayer.x += 5;
player.c:		if (t->seconds > 0.0 && t->seconds < 0.25){
player.c:			t->rplayer.left = 0; t->rplayer.top = 50*2;
player.c:		if (t->seconds > 0.25  && t->seconds < 0.50){
player.c:			t->rplayer.left = 47*2; t->rplayer.top = 100;
player.c:		if (t->seconds > 0.50)
player.c:			sfClock_restart(t->clock);
player.c:		t->direction = 3;
player.c:	else if (t->direction == 3) {
player.c:		t->rplayer.left = 95; t->rplayer.top = 50*2;
player.c:		t->pplayer.x -= 5;
player.c:		if (t->seconds > 0.0 && t->seconds < 0.25){
player.c:			t->rplayer.left = 0; t->rplayer.top = 96*2;
player.c:		if (t->seconds > 0.25  && t->seconds < 0.50){
player.c:			t->rplayer.left = 47*2; t->rplayer.top = 96*2;
player.c:		if (t->seconds > 0.50)
player.c:			sfClock_restart(t->clock);
player.c:		t->direction = 4;
player.c:	else if (t->direction == 4) {
player.c:		t->rplayer.left = 95; t->rplayer.top = 96*2;
text.c:		t->menu1 = 1;
text.c:		i--;
text.c:		t->menu1--;
text.c:		t->menu1++;
text.c:		t->menu1 = 3;
text.c:		sfText_setColor(t->play, sfWhite);
text.c:		sfText_setColor(t->quit, sfWhite);
text.c:		t->menu1 = 1;
text.c:		sfText_setColor(t->play, sfGreen);
text.c:		sfText_setColor(t->quit, sfWhite);
text.c:		t->menu1 = 2;
text.c:		sfText_setColor(t->quit, sfGreen);
text.c:		sfText_setColor(t->play, sfWhite);
text.c:	printf(" menu  =%d\n", t->menu1);
text.c:	t->pplay.x = 800;t->pplay.y = 800;
text.c:	t->pquit.x = 1050;t->pquit.y = 800;
text.c:	t->psettings.x = 900;t->psettings.y = 600;
text.c:	t->pplay.x = 80000;t->pplay.y = 80000;
text.c:	t->pquit.x = 105000;t->pquit.y = 10000;
text.c:	t->phistory.x = 350;t->phistory.y = 300;
text.c:	t->psettings.x = 90033;t->psettings.y = 60033;
text.c:	t->alpha = 0;
text.c:	t->alpha1 = 0;
text.c:	t->s = 0;
text.c:	t->settings = sfText_create();
text.c:	sfText_setString(t->settings, "Settings");
text.c:	sfText_setFont(t->settings, t->font);
text.c:	sfText_setCharacterSize(t->settings, 30);
text.c:	t->font = sfFont_createFromFile("arial.otf");
text.c:	t->play = sfText_create();
text.c:	sfText_setString(t->play, "Start");
text.c:	sfText_setFont(t->play, t->font);
text.c:	sfText_setCharacterSize(t->play, 30);
text.c:	t->quit = sfText_create();
text.c:	sfText_setString(t->quit, "Quit");
text.c:	sfText_setFont(t->quit, t->font);
text.c:	sfText_setCharacterSize(t->quit, 30);
text.c:	t->history = sfText_create();
text.c:	sfText_setString(t->history, "");
text.c:	sfText_setFont(t->history, t->font);
text.c:	sfText_setCharacterSize(t->history, 30);
windows.c:	t->window = sfRenderWindow_create(mode, "Undertale Reborn", sfResize | sfClose, NULL);
windows.c:	sfRenderWindow_setFramerateLimit(t->window, 60);
windows.c:	t->cf.r = 255;t->cf.g = 255;t->cf.b = 255;t->cf.a = 0;
windows.c:	t->cf1.r = 255;t->cf1.g = 255;t->cf1.b = 255;t->cf1.a = 0;
windows.c:	t->i1 = 0;
windows.c:	t->background = texture_create("background.png");
windows.c:	t->sbackground = sprite_create(t->background, sfFalse);
windows.c:	t->mbackground = sfMusic_createFromFile("mbackground.ogg");
windows.c:	sfMusic_play(t->mbackground);
